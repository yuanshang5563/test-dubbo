<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:aop="http://www.springframework.org/schema/aop"   
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:jee="http://www.springframework.org/schema/jee"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">    
  
    <!-- 使用 annotation -->  
    <context:annotation-config />  
    <!-- 使用 annotation 自动注册bean,并检查@Controller, @Service, @Repository注解已被注入 -->   
    <context:component-scan base-package="org.ys" />  
    <!-- 加载数据库属性配置文件 
    <context:property-placeholder location="classpath:jdbc.properties" />-->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:hibernate.properties</value>
			</list>
		</property>
	</bean>  
  
    <!-- 数据库连接池c3p0配置   
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">  
        <property name="jdbcUrl" value="${jdbc.url}"></property>  
        <property name="driverClass" value="${jdbc.driverClassName}"></property>  
        <property name="user" value="${jdbc.username}"></property>  
        <property name="password" value="${jdbc.password}"></property>  
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>  
        <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>  
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>  
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>  
    </bean>  -->
    <!--  -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url" value="${jdbc.url}"></property>
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
      
    <!-- session工厂 -->  
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource">  
            <ref bean="dataSource" />  
        </property>
        <property name="hibernateProperties">
	        <props>
	        	<prop key="hibernate.dialect">${hibernate.dialect}</prop>
	        	<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
	        	<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
	        	<!--  
	        	<prop key="hibernate.connection.useUnicode">${hibernate.connection.useUnicode}</prop>
	        	<prop key="hibernate.onnection.characterEncoding">${hibernate.onnection.characterEncoding}</prop>
	        	-->
	        	<prop key="hibernate.hbm2ddl.auto">update</prop>
	        </props>
        </property>  
        <!-- 自动扫描注解方式配置的hibernate类文件 -->  
        <property name="packagesToScan">  
            <list>  
                <value>org.ys.core.model</value>  
            </list>  
        </property>  
    </bean>  
  
    <!-- 配置事务管理器 -->  
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>  
  
    <!-- 配置事务通知属性 -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <!-- 定义事务传播属性 -->  
        <tx:attributes>  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="edit*" propagation="REQUIRED" />  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="new*" propagation="REQUIRED" />  
            <tx:method name="set*" propagation="REQUIRED" />  
            <tx:method name="remove*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="change*" propagation="REQUIRED" />  
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="*" propagation="REQUIRED" read-only="true" />  
        </tx:attributes>  
    </tx:advice>  
      
    <!-- 应用普通类获取bean    
    <bean id="appContext" class="com.soanl.util.tool.ApplicationUtil"/>-->  
  
    <!-- 配置事务切面 -->  
    <aop:config>  
        <aop:pointcut id="serviceOperation" expression="execution(* org.ys.core.service..*.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />  
    </aop:config>  
  
  	<import resource="dubbo-provider.xml" />
</beans>  